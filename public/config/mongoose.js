var mongoose = require("mongoose");

mongoose.connect("mongodb://localhost:27017/user", {
  useNewUrlParser: true,
  useUnifiedTopology: true
});
var db = mongoose.connection;
db.on("error", console.error.bind(console, "connection error:"));
db.once("open", () => {
  console.log("Connected with the database successfully!");
});
var User = mongoose.Schema({
  name: String,
  blog: []
});
var user = mongoose.model("User", User);

function findAll(callback) {
  user.find({}, callback);
}

function findOne(name, callback) {
  user.find({
    name: name
  }, callback);
}

module.exports.user = user;
module.exports.findAll = findAll;
module.exports.findOne = findOne;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb25maWcvbW9uZ29vc2UuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsIm9uY2UiLCJsb2ciLCJVc2VyIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsImJsb2ciLCJ1c2VyIiwibW9kZWwiLCJmaW5kQWxsIiwiY2FsbGJhY2siLCJmaW5kIiwiZmluZE9uZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUFELFFBQVEsQ0FBQ0UsT0FBVCxDQUFpQixnQ0FBakIsRUFBbUQ7QUFDakRDLEVBQUFBLGVBQWUsRUFBRSxJQURnQztBQUVqREMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGNkIsQ0FBbkQ7QUFLQSxJQUFJQyxFQUFFLEdBQUdMLFFBQVEsQ0FBQ00sVUFBbEI7QUFFQUQsRUFBRSxDQUFDRSxFQUFILENBQU0sT0FBTixFQUFlQyxPQUFPLENBQUNDLEtBQVIsQ0FBY0MsSUFBZCxDQUFtQkYsT0FBbkIsRUFBNEIsbUJBQTVCLENBQWY7QUFDQUgsRUFBRSxDQUFDTSxJQUFILENBQVEsTUFBUixFQUFnQixNQUFNO0FBQ3BCSCxFQUFBQSxPQUFPLENBQUNJLEdBQVIsQ0FBWSwyQ0FBWjtBQUNELENBRkQ7QUFJQSxJQUFJQyxJQUFJLEdBQUdiLFFBQVEsQ0FBQ2MsTUFBVCxDQUFnQjtBQUN6QkMsRUFBQUEsSUFBSSxFQUFFQyxNQURtQjtBQUV6QkMsRUFBQUEsSUFBSSxFQUFFO0FBRm1CLENBQWhCLENBQVg7QUFLQSxJQUFJQyxJQUFJLEdBQUdsQixRQUFRLENBQUNtQixLQUFULENBQWUsTUFBZixFQUF1Qk4sSUFBdkIsQ0FBWDs7QUFFQSxTQUFTTyxPQUFULENBQWlCQyxRQUFqQixFQUEyQjtBQUN6QkgsRUFBQUEsSUFBSSxDQUFDSSxJQUFMLENBQVUsRUFBVixFQUFjRCxRQUFkO0FBQ0Q7O0FBRUQsU0FBU0UsT0FBVCxDQUFpQlIsSUFBakIsRUFBdUJNLFFBQXZCLEVBQWlDO0FBQy9CSCxFQUFBQSxJQUFJLENBQUNJLElBQUwsQ0FBVTtBQUFFUCxJQUFBQSxJQUFJLEVBQUVBO0FBQVIsR0FBVixFQUEwQk0sUUFBMUI7QUFDRDs7QUFFREcsTUFBTSxDQUFDQyxPQUFQLENBQWVQLElBQWYsR0FBc0JBLElBQXRCO0FBQ0FNLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlTCxPQUFmLEdBQXlCQSxPQUF6QjtBQUNBSSxNQUFNLENBQUNDLE9BQVAsQ0FBZUYsT0FBZixHQUF5QkEsT0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XHJcblxyXG5tb25nb29zZS5jb25uZWN0KFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy91c2VyXCIsIHtcclxuICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbn0pO1xyXG5cclxudmFyIGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuXHJcbmRiLm9uKFwiZXJyb3JcIiwgY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUsIFwiY29ubmVjdGlvbiBlcnJvcjpcIikpO1xyXG5kYi5vbmNlKFwib3BlblwiLCAoKSA9PiB7XHJcbiAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgd2l0aCB0aGUgZGF0YWJhc2Ugc3VjY2Vzc2Z1bGx5IVwiKTtcclxufSk7XHJcblxyXG52YXIgVXNlciA9IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGJsb2c6IFtdXHJcbn0pO1xyXG5cclxudmFyIHVzZXIgPSBtb25nb29zZS5tb2RlbChcIlVzZXJcIiwgVXNlcik7XHJcblxyXG5mdW5jdGlvbiBmaW5kQWxsKGNhbGxiYWNrKSB7XHJcbiAgdXNlci5maW5kKHt9LCBjYWxsYmFjayk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbmRPbmUobmFtZSwgY2FsbGJhY2spIHtcclxuICB1c2VyLmZpbmQoeyBuYW1lOiBuYW1lIH0sIGNhbGxiYWNrKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMudXNlciA9IHVzZXI7XHJcbm1vZHVsZS5leHBvcnRzLmZpbmRBbGwgPSBmaW5kQWxsO1xyXG5tb2R1bGUuZXhwb3J0cy5maW5kT25lID0gZmluZE9uZTtcclxuIl19